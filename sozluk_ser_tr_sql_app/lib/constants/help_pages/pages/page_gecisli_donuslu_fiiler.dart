// ðŸ“œ <----- sayfa_gecisli_donuslu_fiiller.drt ----->

import 'package:flutter/material.dart';
import 'package:sozluk_ser_tr_sql_app/constants/text_constants.dart';
import 'package:sozluk_ser_tr_sql_app/widgets/help_page_widgets/help_custom_app_bar.dart';
import 'package:sozluk_ser_tr_sql_app/widgets/help_page_widgets/help_custom_drawer.dart';

import '../../../widgets/help_page_widgets/build_table.dart';
import '../../../widgets/help_page_widgets/rich_text_rule.dart';
import '../constants/const_gecisli_donuslu_fiiler.dart';

class SayfaGecisliDonusluFiiller extends StatefulWidget {
  const SayfaGecisliDonusluFiiller({super.key});

  @override
  State<SayfaGecisliDonusluFiiller> createState() =>
      _SayfaGecisliDonusluFiillerState();
}

/// ðŸ“Œ Ana kod
class _SayfaGecisliDonusluFiillerState
    extends State<SayfaGecisliDonusluFiiller> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: buildHelpAppBar(),
      drawer: buildHelpDrawer(),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(10),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.start,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text("GeÃ§iÅŸli ve DÃ¶nÃ¼ÅŸlÃ¼ Fiiller", style: detailTextBlue),
              const Divider(),
              const Text(
                "GeÃ§iÅŸli fiiller nesne alabilen fiillerdir. "
                "Yani yaptÄ±ÄŸÄ±mÄ±z iÅŸ bir ÅŸeyi etkiler. Eylem "
                "kendimize geri dÃ¶nÃ¼yorsa dÃ¶nÃ¼ÅŸlÃ¼ fiil olur. "
                "Latin ve Slav dillerinde dÃ¶nÃ¼ÅŸlÃ¼ fiiller "
                "Ã¶nemli yer tutar. ",
              ),

              /// TÃ¼rkÃ§e geÃ§iÅŸli ve dÃ¶nÃ¼ÅŸlÃ¼ fiiller
              buildTable(
                gecisliDonusluFiilerTRSample,
                "TÃ¼rkÃ§e GeÃ§iÅŸli ve DÃ¶nÃ¼ÅŸlÃ¼ Fiiller",
                [
                  (user) => user['geÃ§iÅŸli fiil']!,
                  (user) => user['dÃ¶nÃ¼ÅŸlÃ¼ fiil']!,
                ],
              ),

              buildTable(
                gecisliDonusluFiilerSample,
                "Buditi (uyandÄ±rmak) => buditi se (uyanmak)",
                [
                  (user) => user['ÅŸahÄ±s']!,
                  (user) => user['fiil']!,
                  (user) => user['dÃ¶nÃ¼ÅŸlÃ¼ fiil']!,
                  (user) => user['TÃ¼rkÃ§e karÅŸÄ±lÄ±ÄŸÄ±']!,
                ],
              ),
              buildRichTextRule(
                "'se' eklemesi ile geÃ§iÅŸli fiil dÃ¶nÃ¼ÅŸlÃ¼ fiile Ã§evriliyor. "
                "ÅžahÄ±s zamiri ile birlikte kullanÄ±yorsak 'se' fiilden "
                "Ã¶nce olmalÄ±dÄ±r. ÅžahÄ±s zamiri kullanÄ±lmayÄ±nca ise 'se' "
                "eklemesi fiilden sonra olacaktÄ±r.",
                dashTextA: "'se'",
                dashTextB: "'se'",
                dashTextC: "'se'",
                context,
              ),
              buildTable(
                gecisliDonusluFiilerSampleA,
                "Zvati (Ã§aÄŸÄ±rmak) => zvati se (Ã§aÄŸrÄ±lmak)",
                [
                  (user) => user['ÅŸahÄ±s']!,
                  (user) => user['fiil']!,
                  (user) => user['dÃ¶nÃ¼ÅŸlÃ¼ fiil']!,
                  (user) => user['TÃ¼rkÃ§e karÅŸÄ±lÄ±ÄŸÄ±']!,
                ],
              ),
              buildRichTextRule(
                "'zvati' kelimesi, 'adÄ±m ...' ÅŸeklinde kullanÄ±lÄ±yor.",
                dashTextA: "'zvati'",
                dashTextB: "'adÄ±m ...'",
                context,
              ),
              const Divider(),

              /// Evet hayÄ±r sorularÄ±
              const Text("Evet HayÄ±r SorularÄ± ", style: normalBlackText),
              buildTable(
                gecisliDonusluFiilerSampleB,
                "Evet / HayÄ±r soru kalÄ±plarÄ±",
                [(user) => user['kalÄ±p1']!, (user) => user['kalÄ±p2']!],
              ),
              buildRichTextRule(
                "'Da li' kalÄ±bÄ±nda 'se' dÃ¶nÃ¼ÅŸlÃ¼ fiilden Ã¶nce gelirse sorun olmaz.",
                dashTextA: "'Da li'",
                dashTextB: "'se'",
                context,
              ),
              buildRichTextRule(
                "'(fiil) + li' kalÄ±bÄ±nda ise, fiilin baÅŸÄ±na 'se' gelemez.",
                dashTextA: "'(fiil) + li'",
                dashTextB: "'se'",
                context,
              ),
              buildRichTextRule(
                "Bu yÃ¼zden 'dÃ¶nÃ¼ÅŸlÃ¼ fiil' baÅŸta olup, 'li' ve sonra 'se' "
                "ile cÃ¼mle devam ediyor.",
                dashTextA: "'dÃ¶nÃ¼ÅŸlÃ¼ fiil'",
                dashTextB: "'li'",
                dashTextC: "'se'",
                context,
              ),
              const Text("Ã–rnek :  ", style: normalBlackText),
              buildTable(
                gecisliDonusluFiilerSampleC,
                "Evet / HayÄ±r soru kalÄ±plarÄ± - Ã–rnek",
                [(user) => user['sÄ±rpÃ§a']!, (user) => user['tÃ¼rkÃ§e']!],
              ),
              const Divider(),

              /// sÄ±k kullanÄ±lan 7 fiil - 1
              buildTable(
                gecisliDonusluFiilerSampleD,
                "sÄ±k kullanÄ±lan 7 fiil - 1",
                [
                  (user) => user['ÅŸahÄ±s']!,
                  (user) => user['fiil1']!,
                  (user) => user['fiil2']!,
                  (user) => user['fiil3']!,
                ],
              ),

              /// sÄ±k kullanÄ±lan 7 fiil - 2
              buildTable(
                gecisliDonusluFiilerSampleE,
                "sÄ±k kullanÄ±lan 7 fiil - 2",
                [
                  (user) => user['ÅŸahÄ±s']!,
                  (user) => user['fiil4']!,
                  (user) => user['fiil5']!,
                  (user) => user['fiil6']!,
                ],
              ),

              /// sÄ±k kullanÄ±lan 7 fiil - 3
              buildTable(
                gecisliDonusluFiilerSampleF,
                "sÄ±k kullanÄ±lan 7 fiil - 3",
                [(user) => user['ÅŸahÄ±s']!, (user) => user['fiil7']!],
              ),
              buildRichTextRule(
                "(*) 'Razumeti' de lehÃ§e farkÄ± var. SaÄŸdakiler BoÅŸnakÃ§a ve HÄ±rvatÃ§a kalÄ±bÄ±",
                dashTextA: "'Razumeti'",
                context,
              ),

              /// htjeti / hteti (istemek) Fiili
              buildTable(
                gecisliDonusluFiilerSampleG,
                "htjeti / hteti (istemek) Fiili",
                [
                  (user) => user['ÅŸahÄ±s']!,
                  (user) => user['istemek']!,
                  (user) => user['istememek']!,
                ],
              ),
              buildRichTextRule(
                "DÃ¼zensiz bir fiildir. Olumsuz yapma kuralÄ±na da uymaz. Olumsuz "
                "yapÄ±lÄ±nca istisna olarak baÅŸtaki â€˜hoâ€™ atÄ±lÄ±p â€˜neâ€™ eklenir. "
                "Ä°ngilizcedeki will gelecek zamanÄ± ile benzer kullanÄ±mÄ± vardÄ±r."
                "Bu fiil daha Ã§ok arzu etmek / arzulamak anlamÄ±nda kullanÄ±lÄ±r.",
                dashTextA: "â€˜hoâ€™ ",
                dashTextB: "â€˜neâ€™",
                context,
              ),

              /// voljeti / voleti (sevmek) ve Å¾eljeti / Å¾eleti (istemek) fiili
              buildTable(
                gecisliDonusluFiilerSampleH,
                "voljeti / voleti (sevmek) ve Å¾eljeti / Å¾eleti (istemek) fiili",
                [
                  (user) => user['ÅŸahÄ±s']!,
                  (user) => user['sevmek']!,
                  (user) => user['istemek']!,
                ],
              ),
              buildRichTextRule(
                "'Ã–zneleri aynÄ± olan YardÄ±mcÄ± Filler:' KonuÅŸmayÄ± seviyorum, "
                "YÃ¼rÃ¼mek istiyorum, Yemek yemek istiyor ...",
                dashTextA: "'Ã–zneleri aynÄ± olan YardÄ±mcÄ± Filler:'",
                context,
              ),
              buildRichTextRule(
                "'Ã–zneleri farklÄ± olan YardÄ±mcÄ± Filler:' KonuÅŸmanÄ± seviyorum, "
                "YÃ¼rÃ¼melerini istiyorum, Yemek yememi istiyorsun ...",
                dashTextA: "'Ã–zneleri farklÄ± olan YardÄ±mcÄ± Filler:'",
                context,
              ),
              const Divider(),
              buildRichTextRule(
                "Bir cÃ¼mlede birden fazla fiil olursa bir tanesi diÄŸer fiile "
                "yardÄ±mcÄ± oluyor bu durumda yardÄ±mcÄ± fiil olarak adlandÄ±rÄ±lÄ±yor. "
                "'Ã–rneÄŸin' konuÅŸmayÄ± seviyorum cÃ¼mlesinde 'sevmek' fiili yardÄ±mcÄ± "
                "fiildir. 'KonuÅŸmayÄ± sevmeyi' iÅŸaret ediyor.",
                dashTextA: 'Ã–rneÄŸin',
                dashTextB: 'sevmek',
                dashTextC: 'KonuÅŸmayÄ± sevmeyi',
                context,
              ),
              const Divider(),

              const Text("SÄ±rpÃ§a â€˜da Ä°ki kural var:", style: normalBlackText),
              buildRichTextRule(
                "'1.	Kural' Ã–zneler aynÄ± YardÄ±mcÄ± fiil (ÅŸimdiki / geniÅŸ zaman) "
                "+ -ti/-Ä‡i bitimli mastar fiil",
                dashTextA: '1.	Kural',
                context,
              ),
              buildRichTextRule(
                "'2.	Kural' Ã–zneler aynÄ± YardÄ±mcÄ± fiil (ÅŸimdiki / geniÅŸ zaman) "
                "+ -ti/-Ä‡i bitimli mastar fiil",
                dashTextA: '2.	Kural',
                context,
              ),
              const Divider(),

              const Text("Ã–rnek - Ã–zneler AynÄ± ise:", style: normalBlackText),
              buildRichTextRule(
                "dÃ¼ÅŸÃ¼nmek istiyorum â€“ Å¾eljeti (istemek) misliti (dÃ¼ÅŸÃ¼nmek) >> "
                "'(ja) Å¾elim misliti'",
                dashTextA: '(ja) Å¾elim misliti',
                context,
              ),
              const Text(
                "Ã–rnek - Ã–zneler farklÄ± veya aynÄ± ise:",
                style: normalBlackText,
              ),
              buildRichTextRule(
                "Mislim / MisliÅ¡ / Misli / Mislimo / misliti / Mislite / Misle"
                "(ja) Å¾elim da mislim '(SÄ±rpÃ§a)' - ja Å¾elim misliti '(BoÅŸnakÃ§a / HÄ±rvatÃ§a)'",
                dashTextA: '(SÄ±rpÃ§a)',
                dashTextB: '(BoÅŸnakÃ§a / HÄ±rvatÃ§a)',
                context,
              ),
              buildRichTextRule(
                "Ã–zneler aynÄ± olunca 'kural 1' BoÅŸnakÃ§a HÄ±rvatÃ§a â€™da tercih ediliyor."
                "'kural 2' ise SÄ±rpÃ§a â€™da tercih ediliyor.",
                dashTextA: 'kural 1',
                dashTextB: 'kural 2',
                context,
              ),
              const Text("Ã–rnek - Ã–zneler farklÄ± ise:", style: normalBlackText),
              buildRichTextRule(
                "Mislim / MisliÅ¡ / Misli / Mislimo / misliti / Mislite / Misle"
                "ja Å¾elim da misliÅ¡ (BoÅŸnakÃ§a / HÄ±rvatÃ§a / SÄ±rpÃ§a)",
                dashTextA: '(BoÅŸnakÃ§a / HÄ±rvatÃ§a / SÄ±rpÃ§a)',
                context,
              ),
              buildRichTextRule(
                "BoÅŸnak, HÄ±rvat ve SÄ±rp dillerinde mecburen kural 2 uygulanÄ±yor.",
                dashTextA: 'kural 2',
                context,
              ),
              const Divider(),

              /// YardÄ±mcÄ± fiil Ã¶rnekleri
              buildTable(
                gecisliDonusluFiilerSampleI,
                "YardÄ±mcÄ± Fiil Ã–rnekleri",
                [(user) => user['fiil']!, (user) => user['Ã§ekim']!],
              ),
              buildRichTextRule(
                "IÄ‡i fiili gibi bazÄ± filler de Ä‡i eki alÄ±rlar- IÄ‡i fiilinde "
                "dÃ¼zensiz Ã§ekim var. Ã‡ekim yaparken Ä‡i atÄ±lÄ±yor.",
                dashTextA: 'IÄ‡i',
                dashTextB: 'Ä‡i',
                dashTextC: 'IÄ‡i',
                dashTextD: 'Ä‡i',
                context,
              ),
              buildTable(
                gecisliDonusluFiilerSampleJ,
                "YardÄ±mcÄ± Fiil Ã–rnekleri",
                [(user) => user['fiil']!, (user) => user['anlam']!],
              ),
              const Divider(),
              buildRichTextRule(
                "Da eki gelince, Ã¶zne farklÄ±lÄ±klarÄ± oluyor. Yani birinin bir "
                "eylem yapmasÄ±nÄ± istemek gibi.  Å½elim / hocu da ideÅ¡ "
                "(gitmeni istiyorum) ",
                dashTextA: 'Da',
                dashTextB: 'Å½elim / hocu da ideÅ¡',
                dashTextC: '(gitmeni istiyorum)',
                context,
              ),
              const Divider(),
              buildRichTextRule(
                "KullanÄ±m kalÄ±bÄ±: (kiÅŸi zamiri) + fiil + nesne + diÄŸer sÃ¶zcÃ¼kler",
                dashTextA: 'KullanÄ±m kalÄ±bÄ±:',
                context,
              ),
              buildTable(
                gecisliDonusluFiilerSampleK,
                "YardÄ±mcÄ± Fiil Ã–rnekleri",
                [(user) => user['kalÄ±p']!, (user) => user['anlam']!],
              ),

              /// AÅŸaÄŸÄ±dakileri SÄ±rpÃ§aya Ã§eviriniz
              buildTable(
                gecisliDonusluFiilerSampleL,
                "TÃ¼rkÃ§e > SÄ±rpÃ§a Ã‡eviri - 1",
                [(user) => user['tÃ¼rkÃ§e']!, (user) => user['sÄ±rpÃ§a']!],
              ),
              buildTable(
                gecisliDonusluFiilerSampleM,
                "TÃ¼rkÃ§e > SÄ±rpÃ§a Ã‡eviri - 2",
                [(user) => user['tÃ¼rkÃ§e']!, (user) => user['sÄ±rpÃ§a']!],
              ),
            ],
          ),
        ),
      ),
    );
  }
}
