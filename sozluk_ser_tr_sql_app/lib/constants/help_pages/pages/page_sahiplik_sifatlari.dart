// ğŸ“œ <----- sayfa_sahiplik_sifatlari.drt ----->

import 'package:flutter/material.dart';

import '../../../widgets/help_page_widgets/build_table.dart';
import '../../../widgets/help_page_widgets/help_custom_app_bar.dart';
import '../../../widgets/help_page_widgets/help_custom_drawer.dart';
import '../../text_constants.dart';
import '../constants/const_sahiplik_sifatlari.dart';

class SayfaSahiplikSifatlari extends StatefulWidget {
  const SayfaSahiplikSifatlari({super.key});

  @override
  State<SayfaSahiplikSifatlari> createState() => _SayfaSahiplikSifatlariState();
}

/// ğŸ“Œ Ana kod
class _SayfaSahiplikSifatlariState extends State<SayfaSahiplikSifatlari> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: buildHelpAppBar(),
      drawer: buildHelpDrawer(),
      body: buildBody(context),
    );
  }

  /// ğŸ“Œ Body bloÄŸu
  SingleChildScrollView buildBody(BuildContext context) {
    return SingleChildScrollView(
      child: Padding(
        padding: const EdgeInsets.all(10),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            const Text("Sahiplik sÄ±fatlarÄ±", style: detailTextBlue),
            const Divider(),
            const Text(
              "Burada Ã¶nemli olan insanÄ±n da cinsiyetinin belirtilmesidir. "
              "Ä°smin cinsiyeti ve insanÄ±n cinsiyeti birlikte kullanÄ±lÄ±yor. "
              "Benim ve senin sÃ¶zcÃ¼kleri, sÃ¶yleyenin cinsiyetine gÃ¶re "
              "deÄŸiÅŸmez. KullanÄ±ldÄ±ÄŸÄ± isme gÃ¶re deÄŸiÅŸir. Benim arabam "
              "denilince arabanÄ±n cinsiyeti Ã¶nemlidir. SÃ¶yleyenin "
              "cinsiyeti Ã¶nemli deÄŸildir. ",
            ),
            buildTable(sahiplikSifatlariSampleA, "Sahiplik sÄ±fatlarÄ±", [
              (user) => user['ÅŸahÄ±s']!,
              (user) => user['erkek']!,
              (user) => user['diÅŸi']!,
              (user) => user['nÃ¶tr']!,
            ]),
            const Divider(),
            buildTable(
              sahiplikSifatlariSampleB,
              "Ã–rnek - 1 - Å½ivot (hayat) Erkek cins isim",
              [(user) => user['sÄ±rpÃ§a']!, (user) => user['tÃ¼rkÃ§e']!],
            ),
            const Divider(),
            buildTable(
              sahiplikSifatlariSampleC,
              "Ã–rnek - 2 - Å kola (okul) DiÅŸi cins isim",
              [(user) => user['sÄ±rpÃ§a']!, (user) => user['tÃ¼rkÃ§e']!],
            ),
            const Divider(),
            buildTable(
              sahiplikSifatlariSampleD,
              "Ã–rnek - 3 - Selo (kÃ¶y) NÃ¶tr cins isim",
              [(user) => user['sÄ±rpÃ§a']!, (user) => user['tÃ¼rkÃ§e']!],
            ),
            const Divider(),
            buildTable(
              sahiplikSifatlariSampleE,
              "Ã–rnek - 4 - Å kola (okul) DiÅŸi cins isim (Ã§oÄŸul)",
              [(user) => user['sÄ±rpÃ§a']!, (user) => user['tÃ¼rkÃ§e']!],
            ),
            const Divider(),
            buildTable(sahiplikSifatlariSampleF, "Sahiplik sÄ±fatlarÄ± - Ã‡oÄŸul", [
              (user) => user['ÅŸahÄ±s']!,
              (user) => user['erkek']!,
              (user) => user['diÅŸi']!,
              (user) => user['nÃ¶tr']!,
            ]),
            const Divider(),
            buildTable(sahiplikSifatlariSampleG, "Sestra (kÄ±z kardeÅŸ) Ã‡oÄŸul", [
              (user) => user['tekil']!,
              (user) => user['Ã§oÄŸul']!,
              (user) => user['tÃ¼rkÃ§e (Ã§oÄŸul)']!,
            ]),
            const Divider(),
            buildTable(sahiplikSifatlariSampleH, "Ã–rnekler", [
              (user) => user['tÃ¼rkÃ§e']!,
              (user) => user['sÄ±rpÃ§a']!,
            ]),
          ],
        ),
      ),
    );
  }
}
