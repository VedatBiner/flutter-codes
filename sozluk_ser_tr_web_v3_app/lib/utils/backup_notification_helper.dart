// <ðŸ“œ ----- lib/utils/backup_notification_helper.dart ----->
/*
  ðŸ”” Yedek/Export tetikleme helper'Ä± â€” UI'dan baÄŸÄ±msÄ±z, yeniden kullanÄ±labilir

  NE YAPAR?
  - DÄ±ÅŸa aktarma sÃ¼recini baÅŸlatÄ±r (JSON+CSV+XLSX).
  - UI durumunu gÃ¼ncellemek iÃ§in dÄ±ÅŸarÄ±dan verilen callbackâ€™leri Ã§aÄŸÄ±rÄ±r:
      â€¢ onExportingChange(true/false)  â†’ buton kilidi / loading
      â€¢ onStatusChange(text)           â†’ ekrandaki durum metni
  - Snackbar gÃ¶stermek iÃ§in, await'ten Ã¶nce alÄ±nan ScaffoldMessenger ile gÃ¼venli Ã§aÄŸrÄ± yapar.
  - await sonrasÄ±nda BuildContext kullanmadan Ã¶nce `context.mounted` ile gÃ¼venlik saÄŸlar
    (lint: use_build_context_synchronously uyarÄ±sÄ±nÄ± Ã¶nlemek iÃ§in).

  KULLANIM
    await triggerBackupExport(
      context: context,
      onStatusChange: (s) => setState(() => status = s),
      onExportingChange: (v) => setState(() => exporting = v),
      pageSize: 1000,
      subfolder: appName, // info_constants.dart'tan
    );
*/

import 'package:flutter/material.dart';

import '../constants/text_constants.dart';
import '../services/export_words.dart';
import '../services/notification_service.dart';

Future<void> triggerBackupExport({
  required BuildContext context,
  required void Function(String status) onStatusChange,
  required void Function(bool exporting) onExportingChange,
  int pageSize = 1000,
  String? subfolder,
}) async {
  // ðŸ”‘ awaitâ€™ten Ã–NCE messengerâ€™Ä± al â†’ contextâ€™i saklamadan gÃ¼venli kullanÄ±m
  final messenger = ScaffoldMessenger.maybeOf(context);

  // BaÅŸlangÄ±Ã§ UI durumu
  onExportingChange(true);
  onStatusChange('JSON + CSV + Excel hazÄ±rlanÄ±yor...');

  try {
    final res = await exportWordsToJsonCsvXlsx(
      pageSize: pageSize,
      subfolder: subfolder,
    );

    // await sonrasÄ± context kullanmadan Ã¶nce mutlaka kontrol et
    if (!context.mounted) return;

    onStatusChange(
      'Tamam: ${res.count} kayÄ±t â€¢ JSON: ${res.jsonPath} â€¢ CSV: ${res.csvPath} â€¢ XLSX: ${res.xlsxPath}',
    );

    // BaÅŸarÄ±lÄ± bildirim (UI iÃ§inde custom sheet/dialog vb.)
    NotificationService.showCustomNotification(
      context:
          context, // âœ… rootCtx tutmuyoruz; mounted kontrolÃ¼nden sonra kullanÄ±yoruz
      title: 'Yedek OluÅŸturuldu',
      message: RichText(
        text: TextSpan(
          style: normalBlackText,
          children: [
            const TextSpan(
              text: "\nVeriler yedeklendi \n",
              style: kelimeAddText,
            ),
            TextSpan(text: "Toplam : ${res.count} kayÄ±t âœ… \n"),
            TextSpan(text: "JSON â†’ ${res.jsonPath} âœ… \n"),
            TextSpan(text: "CSV â†’ ${res.csvPath} âœ… \n"),
            TextSpan(text: "XLSX â†’ ${res.xlsxPath} âœ… \n"),
          ],
        ),
      ),
      icon: Icons.download_for_offline_outlined,
      iconColor: Colors.green,
      progressIndicatorColor: Colors.green,
      progressIndicatorBackground: Colors.green.shade100,
    );
  } catch (e) {
    if (!context.mounted) return;
    onStatusChange('Hata: $e');
    messenger?.showSnackBar(SnackBar(content: Text('Hata: $e')));
  } finally {
    if (!context.mounted) return;
    onExportingChange(false);
  }
}
