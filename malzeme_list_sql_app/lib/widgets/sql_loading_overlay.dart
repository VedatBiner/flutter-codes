// ğŸ“ƒ <----- sql_loading_overlay.dart ----->
//
// Bu dosya, SQL yÃ¼kleme iÅŸlemleri sÄ±rasÄ±nda ekranda geÃ§ici olarak
// bir `SQLLoadingCard` gÃ¶stermek iÃ§in kullanÄ±lÄ±r.
//
// KullanÄ±mÄ±: Overlay sistemine geÃ§ici olarak kart ekler ve
// yÃ¼kleme ilerlemesini dinamik olarak gÃ¼nceller.
//

import 'package:flutter/material.dart';

import '../widgets/sql_loading_card.dart';

/// `SQLLoadingCardOverlay`
///
/// Bu widget, uygulama ekranÄ±na geÃ§ici bir `OverlayEntry` olarak eklenir.
/// JSON'dan veritabanÄ±na veri aktarÄ±lÄ±rken yÃ¼kleme durumu burada gÃ¶sterilir.
///
/// `update()` metoduyla dÄ±ÅŸarÄ±dan progress ve metinler gÃ¼ncellenebilir.
class SQLLoadingCardOverlay extends StatefulWidget {
  /// Widget'Ä±n state referansÄ± â€“ dÄ±ÅŸarÄ±dan gÃ¼ncelleme iÃ§in static tutulur
  static late _SQLLoadingCardOverlayState _state;

  const SQLLoadingCardOverlay({super.key});

  /// DÄ±ÅŸarÄ±dan Ã§aÄŸrÄ±larla gÃ¼ncellenmesini saÄŸlar
  static void update({
    required double progress,
    required String? loadingWord,
    required Duration elapsedTime,
    required bool show,
  }) {
    if (_state.mounted) {
      _state.updateState(progress, loadingWord, elapsedTime, show);
    }
  }

  @override
  State<SQLLoadingCardOverlay> createState() {
    _state = _SQLLoadingCardOverlayState();
    return _state;
  }
}

/// State sÄ±nÄ±fÄ± â€“ widgetâ€™Ä±n iÃ§ durumunu yÃ¶netir
class _SQLLoadingCardOverlayState extends State<SQLLoadingCardOverlay> {
  double _progress = 0.0; // YÃ¼kleme yÃ¼zdesi (0â€’1 arasÄ±)
  String? _currentWord; // O an yÃ¼klenen malzeme
  Duration _elapsed = Duration.zero; // GeÃ§en sÃ¼re
  bool _visible = true; // Kart gÃ¶rÃ¼nsÃ¼n mÃ¼?

  /// Yeni durum bilgileri ile widgetâ€™Ä± yeniden oluÅŸturur
  void updateState(
    double progress,
    String? currentWord,
    Duration elapsedTime,
    bool show,
  ) {
    setState(() {
      _progress = progress;
      _currentWord = currentWord;
      _elapsed = elapsedTime;
      _visible = show;
    });
  }

  @override
  Widget build(BuildContext context) {
    // EÄŸer gÃ¶rÃ¼nÃ¼r deÄŸilse boÅŸ widget dÃ¶ndÃ¼r
    if (!_visible) return const SizedBox.shrink();

    return Stack(
      children: [
        /// EkranÄ±n tamamÄ±nÄ± hafif karartarak arka planÄ± bloke eder
        ModalBarrier(dismissible: false, color: Colors.black.withOpacity(0.3)),

        /// Ortada SQLLoadingCard widgetâ€™Ä± gÃ¶sterilir
        Center(
          child: SQLLoadingCard(
            progress: _progress,
            loadingItem: _currentWord,
            elapsedTime: _elapsed,
          ),
        ),
      ],
    );
  }
}
